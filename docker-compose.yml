services:
  # Database PostgreSQL per Airflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  # Servizio principale Airflow - solo webserver e scheduler in uno
  airflow:
    build: .
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      # Java and Spark configuration - JAVA_HOME rilevato dinamicamente nel codice
      SPARK_HOME: /home/airflow/.local/lib/python3.11/site-packages/pyspark
      PYSPARK_PYTHON: python3
      PYSPARK_DRIVER_PYTHON: python3
      SPARK_LOCAL_IP: 127.0.0.1
      SPARK_DRIVER_MEMORY: 512m
      SPARK_EXECUTOR_MEMORY: 512m
      SPARK_DRIVER_HOST: 127.0.0.1
      PYTHONPATH: /opt/airflow/src
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./input:/opt/airflow/input
      - ./output:/opt/airflow/output
      - ./src:/opt/airflow/src
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
        airflow webserver --port 8080 &
        airflow scheduler
      "

  # Servizio standalone per eseguire la pipeline senza Airflow (opzionale)
  pipeline-standalone:
    build: .
    profiles:
      - standalone
    volumes:
      - ./input:/opt/airflow/input
      - ./output:/opt/airflow/output
      - ./src:/opt/airflow/src
    environment:
      PYTHONPATH: "/opt/airflow/src"
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      SPARK_HOME: /opt/airflow/.local/lib/python3.11/site-packages/pyspark
    command: python /opt/airflow/src/data_pipeline.py

volumes:
  postgres-db-volume: